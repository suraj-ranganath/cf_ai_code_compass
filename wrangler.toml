name = "cf-ai-code-compass"
main = "workers/router.ts"
compatibility_date = "2024-10-01"
node_compat = true

# Workers AI binding
[ai]
binding = "AI"

# Vectorize binding for semantic search & embeddings
[[vectorize]]
binding = "VECTORIZE_INDEX"
index_name = "code-compass-embeddings"

# Durable Object for session state & RTC
[[durable_objects.bindings]]
name = "DO_SESSIONS"
class_name = "SessionDurableObject"
script_name = "cf-ai-code-compass"

[[migrations]]
tag = "v1"
new_sqlite_classes = ["SessionDurableObject"]

# KV for user preferences & lightweight state
[[kv_namespaces]]
binding = "KV_PREFS"
id = "e9ecc35250ee4a3a893b4a25f30412a3"
preview_id = "5a40327a43db4937a347ac263b57d508"

# R2 bucket for caching large repositories (optional)
# Uncomment after creating: npx wrangler r2 bucket create code-compass-cache
# Then run: npx wrangler r2 bucket create code-compass-cache
# [[r2_buckets]]
# binding = "R2_CACHE"
# bucket_name = "code-compass-cache"

# Environment variables
[vars]
ENVIRONMENT = "development"
MAX_REPO_FILES = "100"
QUIZ_QUESTIONS_COUNT = "6"
STUDY_PLAN_DURATION_MINUTES = "15"
LLM_MODEL = "@cf/meta/llama-3.3-70b-instruct-fp8-fast"
EMBEDDING_MODEL = "@cf/baai/bge-base-en-v1.5"

# Secrets (set via wrangler secret put)
# - GITHUB_TOKEN (for higher rate limits)

# Observability
[observability]
enabled = true

# Routes for Workers (optional - configure your domain)
# routes = [
#   { pattern = "socratic-mentor.example.com/*", zone_name = "example.com" }
# ]

# Development configuration
[env.development]
vars = { ENVIRONMENT = "development" }

# Production configuration
[env.production]
vars = { ENVIRONMENT = "production" }
